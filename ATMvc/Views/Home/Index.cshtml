@{
    ViewBag.Title = "首页";
    var F = @Html.F();
}

@section head {
    <link type="text/css" rel="stylesheet" href="~/res/css/index.css" />
}

@functions {
    private void SetCheckedMenuItem(MenuButton menuButton, string checkedValue)
    {
        foreach (MenuItem item in menuButton.Menu.Items)
        {
            MenuCheckBox checkBox = (item as MenuCheckBox);
            if (checkBox != null)
            {
                checkBox.Checked = checkBox.AttributeDataTag == checkedValue;
            }
        }
    }
}

@section body {

    <div id="header" class="f-widget-header f-mainheader">
        <table>
            <tr>
                <td>
                    @(F.Button().OnClientClick("window.open('https://github.com/SixGodZhang','_blank');").EnableDefaultCorner(false).EnableDefaultState(false).IconFont(IconFont._Home).IconAlign(IconAlign.Top).ToolTip("主页").ID("btnHomePage").CssClass("icononlyaction"))
                    <a class="logo" href="@Url.Content("~/")" title="AT MVC">AT MVC </a>
                </td>
                <td style="text-align: right;">

                    @(F.Button().EnableDefaultCorner(false).EnableDefaultState(false).IconFont(IconFont._Skin).IconAlign(IconAlign.Top).Text("主题仓库").ID("btnThemeSelect").CssClass("icontopaction themes").Listener("click", "onThemeSelectClick"))

                    @(F.Button().EnableDefaultCorner(false).EnableDefaultState(false).IconAlign(IconAlign.Left).IconUrl(Url.Content("~/res/images/head.png")).Text("SixGodZhang").CssClass("userpicaction")
                        .Menu(F.Menu()
                            .Items(
                                F.MenuButton().IconFont(IconFont._User).Text("个人信息").Listener("click", "F.alert('尚未实现');"),
                                F.MenuSeparator(),
                                F.MenuButton().IconFont(IconFont._SignOut).Text("安全退出").Listener("click", "F.alert('尚未实现');")
                            )
                        )
                    )
                </td>
            </tr>
        </table>
    </div>

    @(F.RegionPanel().ID("RegionPanel1").ShowBorder(false).IsViewPort(true).CssClass("mainpanel")
                .Regions(
                    F.Region().ID("Region1").ShowBorder(false).ShowHeader(false).RegionPosition(Position.Top).CssClass("topregion bgpanel").Layout(LayoutType.Fit).ContentEl("#header"),
                    F.Region().ID("Region2").RegionSplit(true).RegionSplitWidth(2).RegionSplitIcon(false).Width(200).ShowHeader(false).Title("菜单").EnableCollapse(true).Layout(LayoutType.Fit).RegionPosition(Position.Left).CssClass("leftregion bgpanel")
                        .Items(
                            F.Tree().ShowBorder(false).ShowHeader(false).ID("treeMenu")
                                .Nodes(
                                    F.TreeNode().Text("默认分类").Expanded(true)
                                        .Nodes(
                                        (TreeNode[])ViewBag.TreeMenuNodes
                                        )
                                )
                        ),
                    F.Region().ID("mainRegion").ShowHeader(false).Layout(LayoutType.Fit).RegionPosition(Position.Center).CssClass("centerregion")
                        .Items(
                            F.TabStrip().ID("mainTabStrip").EnableTabCloseMenu(true).ShowBorder(false).ShowInkBar(true)
                                .Tabs(
                                    F.Tab().ID("Tab1").Title("首页").BodyPadding(10).Layout(LayoutType.Fit).Icon(Icon.House).ContentEl("#maincontent")
                                )
                        )
                )
    )

    @(F.Window().Hidden(true).EnableResize(true).EnableMaximize(true).EnableClose(true).Height(600).Width(1020).IsModal(true).ClearIFrameAfterClose(false).IFrameUrl(Url.Content("~/Home/Themes")).EnableIFrame(true).Title("主题仓库").ID("windowThemeRoller"))

    @{
        string cookieMenuStyle = (string)ViewBag.CookieMenuStyle;
        string cookieMenuMode = (string)ViewBag.CookieMenuMode;
        string cookieLang = (string)ViewBag.CookieLang;
        string cookieSearchText = (string)ViewBag.CookieSearchText;

        // 初始化左侧菜单
        Tree treeMenu = F.GetControl<Tree>("treeMenu");
        if (cookieMenuStyle == "tree" || cookieMenuStyle == "tree_minimode")
        {
            treeMenu.HideHScrollbar = true;
            treeMenu.HideVScrollbar = true;
            treeMenu.ExpanderToRight = true;
            treeMenu.HeaderStyle = true;
            treeMenu.AllHeaderStyle = true;
        }

        //// 初始化设置 - 菜单模式
        //SetCheckedMenuItem(F.GetControl<MenuButton>("MenuMode"), cookieMenuMode);

        // 初始化搜索文本
        var ttbxSearch = F.GetControl<TwinTriggerBox>("ttbxSearch");
        if (!String.IsNullOrEmpty(cookieSearchText))
        {
            ttbxSearch.Text = cookieSearchText;
            ttbxSearch.ShowTrigger1 = true;
            ttbxSearch.Width = 200;
            ttbxSearch.CssClass = "searchbox expanded";
        }

        // 初始化主区域
        var pm = F.PageManager;
        var tab1 = F.GetControl<Tab>("Tab1");
        if (pm.Source.CustomTheme.ToLower() == "bootstrap_pure")
        {
            tab1.IFrameUrl = "~/Basic/MainBootstrapPure";
        }

    }


}




@section script {

    <script>

        // 点击主题仓库
        function onThemeSelectClick(event) {
            F.ui.windowThemeRoller.show();
        }

        // 页面控件初始化完毕后，会调用用户自定义的onReady函数
        F.ready(function () {

            if (!F.ui.treeMenu) return;


            // 初始化主框架中的树和选项卡互动，以及地址栏的更新
            // treeMenu： 主框架中的树控件实例，或者内嵌树控件的手风琴控件实例
            // mainTabStrip： 选项卡实例
            // updateHash: 切换Tab时，是否更新地址栏Hash值（默认值：true）
            // refreshWhenExist： 添加选项卡时，如果选项卡已经存在，是否刷新内部IFrame（默认值：false）
            // refreshWhenTabChange: 切换选项卡时，是否刷新内部IFrame（默认值：false）
            // maxTabCount: 最大允许打开的选项卡数量
            // maxTabMessage: 超过最大允许打开选项卡数量时的提示信息
            F.initTreeTabStrip(F.ui.treeMenu, F.ui.mainTabStrip, {
                maxTabCount: 10,
                maxTabMessage: '请先关闭一些选项卡（最多允许打开 10 个）！'
            });

        });
    </script>
}
